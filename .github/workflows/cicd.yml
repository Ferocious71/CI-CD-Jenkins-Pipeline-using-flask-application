name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all files and history are fetched

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Debug File Structure
        run: ls -R  # Ensure 'tests/' directory exists

      - name: Debug Pytest Collection
        run: |
          source venv/bin/activate
          pytest --collect-only --verbose  # Verify test discovery

      - name: Run Tests
        run: |
          source venv/bin/activate
          python -m pytest tests/ --verbose  # Explicitly run tests

      - name: Build Application
        run: |
          echo "Building Flask app..."
          mkdir -p build
          cp app.py build/

  deploy_staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Set up SSH Key
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 400 private_key.pem  # Set strict permissions for security

      - name: Deploy to Staging Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.STAGING_SERVER_IP }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $DEPLOY_USER@$SERVER_IP << 'EOF'
            cd /home/$DEPLOY_USER/staging-app
            git pull origin staging
            source venv/bin/activate
            pip install -r requirements.txt
            sudo systemctl restart flask-app
            echo "âœ… Staging deployment successful!"
          EOF

  deploy_production:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up SSH Key
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 400 private_key.pem  # Set strict permissions for security  
      - name: Deploy to Production Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.PRODUCTION_SERVER_IP }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $DEPLOY_USER@$SERVER_IP << 'EOF'
            cd /home/$DEPLOY_USER/production-app
            git pull origin main
            source venv/bin/activate
            pip install -r requirements.txt
            sudo systemctl restart flask-app
            echo "ðŸš€ Production deployment successful!"
          EOF
